{
  "stats": {
    "suites": 1,
    "tests": 36,
    "passes": 36,
    "pending": 0,
    "failures": 0,
    "start": "2024-02-29T18:55:49.221Z",
    "end": "2024-02-29T18:55:59.718Z",
    "duration": 10497,
    "testsRegistered": 36,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "27abe673-9b34-43dd-b89f-f0646ae96eb4",
      "title": "",
      "fullFile": "cypress\\e2e\\specs\\apiTests.cy.js",
      "file": "cypress\\e2e\\specs\\apiTests.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
          "title": "GoAwake API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create customer profile",
              "fullTitle": "GoAwake API Create customer profile",
              "timedOut": null,
              "duration": 642,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createRequest('POST', endpoints.url.baseUrl + endpoints.create.customerProfile, payloads.createCustomerProfile).then(response => {\n  expect(response.status).to.eq(201);\n  variables.customerId = response.body.id;\n  variables.customerName = response.body.name;\n  variables.customerCnpj = response.body.cnpj;\n  variables.customerAddress = response.body.address;\n  variables.customerIntegration = response.body.integration;\n  cy.log(JSON.stringify(response.body));\n});",
              "err": {},
              "uuid": "60b52baa-f411-472a-ba5a-5eb0cc71b6fc",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create customer",
              "fullTitle": "GoAwake API Create customer",
              "timedOut": null,
              "duration": 118,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const createCustomerWithId = _objectSpread(_objectSpread({}, payloads.createCustomer), {}, {\n  customerProfileId: variables.customerId\n});\ncreateRequest('POST', endpoints.url.baseUrl + endpoints.create.customer, createCustomerWithId).then(response => {\n  expect(response.status).to.eq(201);\n  variables.customerChildId = response.body.id;\n  variables.customerChildName = response.body.name;\n  variables.customerIntegration = response.body.integration;\n  variables.customerCnpj = response.body.cnpj;\n  variables.customerAddress = response.body.address;\n  variables.customerName = response.body.name;\n  variables.customerId = response.body.customerProfileId;\n});",
              "err": {},
              "uuid": "26a510d7-a4bb-465e-92c3-501a5b036fbc",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create user",
              "fullTitle": "GoAwake API Create user",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const createUserWithId = _objectSpread(_objectSpread({}, payloads.createUser), {}, {\n  customerChild: variables.customerChildId,\n  customer: variables.customerId\n});\ncreateRequest('POST', endpoints.url.baseUrl + endpoints.create.user, createUserWithId).then(response => {\n  expect(response.status).to.eq(201);\n});",
              "err": {},
              "uuid": "1da55a04-0db7-46b9-971b-4b2577729cc6",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create contact",
              "fullTitle": "GoAwake API Create contact",
              "timedOut": null,
              "duration": 130,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const createContactWithId = _objectSpread(_objectSpread({}, payloads.createContact), {}, {\n  customerProfileId: variables.customerId\n});\ncreateRequest('POST', endpoints.url.baseUrl + endpoints.create.contact, [createContactWithId]).then(response => {\n  expect(response.status).to.eq(201);\n});",
              "err": {},
              "uuid": "fff72976-838a-4439-bcfa-5c10278c2e5e",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create risk rating",
              "fullTitle": "GoAwake API Create risk rating",
              "timedOut": null,
              "duration": 126,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const createRiskRatingWithId = _objectSpread(_objectSpread({}, payloads.createRiskRating), {}, {\n  customers_child_id: [variables.customerChildId]\n});\ncreateRequest('POST', endpoints.url.baseUrl + endpoints.create.riskRating, createRiskRatingWithId).then(response => {\n  expect(response.status).to.eq(201);\n});",
              "err": {},
              "uuid": "dab62648-b225-41d3-b9a4-cc31d0c4228b",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create equipment",
              "fullTitle": "GoAwake API Create equipment",
              "timedOut": null,
              "duration": 184,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createRequest('POST', endpoints.url.baseUrl + endpoints.create.equipment, payloads.createEquipment).then(response => {\n  expect(response.status).to.eq(201);\n  variables.equipmentId = response.body.id;\n});",
              "err": {},
              "uuid": "7301dd01-ddc4-4b0c-94b9-7f71035c920a",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create treatment",
              "fullTitle": "GoAwake API Create treatment",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const createTreatmentWithId = _objectSpread(_objectSpread({}, payloads.createTreatment), {}, {\n  customer_id: variables.customerId\n});\ncreateRequest('POST', endpoints.url.baseUrl + endpoints.create.treatment, createTreatmentWithId).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "a7979a12-3b51-4304-a092-c1c0a7d561e7",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create vehicle",
              "fullTitle": "GoAwake API Create vehicle",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const createVehicleWithId = _objectSpread(_objectSpread({}, payloads.createVehicle[0]), {}, {\n  customerChildId: variables.customerChildId\n});\ncreateRequest('POST', endpoints.url.baseUrl + endpoints.create.vehicle, [createVehicleWithId]).then(response => {\n  expect(response.status).to.eq(201);\n  variables.vehicleId = response.body[0].id;\n  variables.vehicleName = response.body[0].name;\n  variables.vehicleIdentification = response.body[0].identification;\n  variables.vehicleIntegration = response.body[0].integration;\n});",
              "err": {},
              "uuid": "215d6c5b-ee52-4d0e-8283-5a026b097930",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create driver",
              "fullTitle": "GoAwake API Create driver",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const createDriverWithId = _objectSpread(_objectSpread({}, payloads.createDriver[0]), {}, {\n  customerChildId: variables.customerChildId\n});\ncreateRequest('POST', endpoints.url.baseUrl + endpoints.create.driver, [createDriverWithId]).then(response => {\n  expect(response.status).to.eq(201);\n  variables.driverId = response.body[0].id;\n  variables.driverIntegration = response.body[0].integration;\n});",
              "err": {},
              "uuid": "c3e3fd6f-56d4-4c96-b9a4-8038649cc8e2",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create badge",
              "fullTitle": "GoAwake API Create badge",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const createBadgeWithId = _objectSpread(_objectSpread({}, payloads.createBadge), {}, {\n  customerId: variables.customerId\n});\ncreateRequest('POST', endpoints.url.baseUrl + endpoints.create.badge, createBadgeWithId).then(response => {\n  expect(response.status).to.eq(201);\n});",
              "err": {},
              "uuid": "2b002c72-91ab-4445-8744-2cc1d4bb2236",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create voice message",
              "fullTitle": "GoAwake API Create voice message",
              "timedOut": null,
              "duration": 772,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const createVoiceMessageWithId = _objectSpread(_objectSpread({}, payloads.createVoiceMessage), {}, {\n  customerProfileId: variables.customerId\n});\ncreateRequest('POST', endpoints.url.baseUrl + endpoints.create.voiceMessage, createVoiceMessageWithId).then(response => {\n  expect(response.status).to.eq(201);\n});",
              "err": {},
              "uuid": "0cdd779f-f155-4256-94bf-1cae2628ae7f",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update driver",
              "fullTitle": "GoAwake API Update driver",
              "timedOut": null,
              "duration": 118,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const editDriver = _objectSpread(_objectSpread({}, payloads.createDriver), {}, {\n  id: variables.driverId,\n  name: faker.person.firstName(),\n  customerId: variables.customerId,\n  customerChildId: variables.customerChildId,\n  integration: variables.driverIntegration,\n  identification: variables.driverIdentification,\n  customerChildName: variables.customerChildName,\n  active: true,\n  hasFaceRecog: false\n});\ncreateRequest('PUT', endpoints.url.baseUrl + endpoints.update.updateDriver + variables.driverId, editDriver).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.name).to.eq(editDriver.name);\n});",
              "err": {},
              "uuid": "cf6d0557-d2b6-4567-a9f3-68a89da71f58",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update install imei",
              "fullTitle": "GoAwake API Update install imei",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "variables.installEquipmentURL = endpoints.url.baseUrl + '//v2/equipment/' + variables.equipmentId + '?acao=instalacao';\nconst joinImeiOnAsset = _objectSpread(_objectSpread({}, payloads.joinImeiOnAsset), {}, {\n  assetId: variables.vehicleId\n});\ncreateRequest('PUT', variables.installEquipmentURL, joinImeiOnAsset).then(response => {\n  expect(response.status).to.eq(201);\n});",
              "err": {},
              "uuid": "5524537a-79d2-4823-bdb1-9fe35dc296b5",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update desinstall Imei",
              "fullTitle": "GoAwake API Update desinstall Imei",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "variables.desintallEquipmentURL = endpoints.url.baseUrl + '//v2/equipment/' + variables.equipmentId + '?acao=desinstalacao';\ncreateRequest('PUT', variables.desintallEquipmentURL, payloads.desinstallImei).then(response => {\n  expect(response.status).to.eq(201);\n});",
              "err": {},
              "uuid": "89403367-e761-4bdb-b7be-d875e0c749eb",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update inative Vehicle",
              "fullTitle": "GoAwake API Update inative Vehicle",
              "timedOut": null,
              "duration": 154,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "variables.inativeVehicleURL = endpoints.url.baseUrl + endpoints.update.inativeVehicle + variables.vehicleId;\nconst inativeVehicle = _objectSpread(_objectSpread({}, payloads.inativeVehicle), {}, {\n  id: variables.vehicleId,\n  name: variables.vehicleName,\n  customerId: variables.customerId,\n  identification: variables.vehicleIdentification,\n  customerChildName: variables.customerChildName,\n  integration: variables.vehicleIntegration\n});\ncreateRequest('PUT', variables.inativeVehicleURL, inativeVehicle).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "9760008b-f57b-4e5e-8332-3ac5fb25759d",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update inative customer profile",
              "fullTitle": "GoAwake API Update inative customer profile",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "variables.inativeCustomerProfileURL = endpoints.url.baseUrl + endpoints.update.inativeCustomerProfile + variables.customerId;\nconst inativeCustomerProfile = _objectSpread(_objectSpread({}, payloads.inativeCustomerProfile), {}, {\n  id: variables.customerId,\n  name: variables.customerName,\n  cnpj: variables.customerCnpj,\n  address: variables.customerAddress,\n  integration: variables.customerIntegration\n});\ncreateRequest('PUT', variables.inativeCustomerProfileURL, inativeCustomerProfile).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "4e2aea08-f888-4d23-b494-a63054ce675e",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Read alerts",
              "fullTitle": "GoAwake API Read alerts",
              "timedOut": null,
              "duration": 2635,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.exec('node ./cypress/e2e/integration/resources/postAlert.js');\ncreateRequest('POST', endpoints.url.baseUrl + endpoints.read.customers, payloads.customers).then(response => {\n  expect(response.status).to.eq(200);\n  variables.alertId = response.body[0].id;\n});",
              "err": {},
              "uuid": "85ed73ad-a4ce-4292-929d-40eac52cc14d",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create treat alert",
              "fullTitle": "GoAwake API Create treat alert",
              "timedOut": null,
              "duration": 154,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const createTreatAlertWithId = _objectSpread(_objectSpread({}, payloads.treatAlert), {}, {\n  alarms: payloads.treatAlert.alarms.map(alarm => _objectSpread(_objectSpread({}, alarm), {}, {\n    id: variables.alertId\n  }))\n});\ncreateRequest('POST', endpoints.url.baseUrl + endpoints.create.treatAlert, createTreatAlertWithId).then(response => {\n  expect(response.status).to.eq(201);\n  variables.auditId = response.body.id;\n});",
              "err": {},
              "uuid": "914d5395-8536-4cd7-9a34-a2834074e132",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create email",
              "fullTitle": "GoAwake API Create email",
              "timedOut": null,
              "duration": 364,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createRequest('POST', endpoints.url.baseUrl + endpoints.create.email + variables.auditId, payloads.sendEmail).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "9bf9f231-c9c3-488f-9f78-5caea9542e21",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create signature",
              "fullTitle": "GoAwake API Create signature",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const createSignatureWithId = _objectSpread(_objectSpread({}, payloads.signatureAlert), {}, {\n  auditId: variables.auditId\n});\ncreateRequest('POST', endpoints.url.baseUrl + endpoints.create.signature, createSignatureWithId).then(response => {\n  expect(response.status).to.eq(201);\n  variables.signatureId = response.body.id;\n});",
              "err": {},
              "uuid": "3bce5523-48f0-4d68-ba9d-09a87600d175",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete signature",
              "fullTitle": "GoAwake API Delete signature",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createRequest('DELETE', endpoints.url.baseUrl + endpoints.delete.signature + variables.signatureId).then(response => {\n  expect(response.status).to.eq(204);\n});",
              "err": {},
              "uuid": "08571930-3e9b-43e5-92ef-ec7b96a401d6",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create audit",
              "fullTitle": "GoAwake API Create audit",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const createAuditWithId = _objectSpread(_objectSpread({}, payloads.auditAlert), {}, {\n  auditId: variables.auditId\n});\ncreateRequest('POST', endpoints.url.baseUrl + endpoints.create.audit, createAuditWithId).then(response => {\n  expect(response.status).to.eq(201);\n});",
              "err": {},
              "uuid": "11a5aeb4-20e4-45d7-859b-620f64b374d3",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Read users from customer",
              "fullTitle": "GoAwake API Read users from customer",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createRequest('GET', endpoints.url.baseUrl + endpoints.read.users + variables.customerId).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "7d7bb9ea-af0a-4fa5-8e0a-b19f5a013ba6",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Read last heartbeats",
              "fullTitle": "GoAwake API Read last heartbeats",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createRequest('POST', endpoints.url.baseUrl + endpoints.read.heartbeat, payloads.readHeartbeats).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body[0]).to.have.property('vehicle_id');\n});",
              "err": {},
              "uuid": "47cecd24-381a-450c-8d45-54c017c3be73",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Read audited alarms",
              "fullTitle": "GoAwake API Read audited alarms",
              "timedOut": null,
              "duration": 271,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createRequest('POST', endpoints.url.baseUrl + endpoints.read.auditedAlarms, payloads.customers).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.be.an('array').that.is.not.empty;\n  expect(response.body[0]).to.have.property('equipmentTypeId');\n});",
              "err": {},
              "uuid": "de898126-7ea7-466e-8460-15c0ab867f7a",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Read customer profile",
              "fullTitle": "GoAwake API Read customer profile",
              "timedOut": null,
              "duration": 225,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createRequest('GET', endpoints.url.baseUrl + endpoints.read.customerProfile).then(response => {\n  expect(response.status).to.eq(200);\n  expect(JSON.parse(response.body)).to.be.an('array');\n});",
              "err": {},
              "uuid": "b6e690d5-343d-436b-ac01-d1bec7b81cd7",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Read active customers",
              "fullTitle": "GoAwake API Read active customers",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createRequest('GET', endpoints.url.baseUrl + endpoints.read.customersActive).then(response => {\n  expect(response.status).to.eq(200);\n  expect(JSON.parse(response.body)).to.be.an('array').that.is.not.empty;\n});",
              "err": {},
              "uuid": "eca86c5e-b9f1-4309-829b-c5ca8bf31ff2",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Read telemetry positions",
              "fullTitle": "GoAwake API Read telemetry positions",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createRequest('POST', endpoints.read.telemetryPositions, payloads.telemetryPositions).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "290182d0-0838-46e3-9e20-d198f1363c8a",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Read vehicles",
              "fullTitle": "GoAwake API Read vehicles",
              "timedOut": null,
              "duration": 360,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createRequest('POST', endpoints.url.baseUrl + endpoints.read.vehiclesOrDrivers, payloads.readVehicles).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.be.an('array').that.is.not.empty;\n});",
              "err": {},
              "uuid": "a441e0ae-aa48-4a08-9e12-2802ddd78353",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Read drivers",
              "fullTitle": "GoAwake API Read drivers",
              "timedOut": null,
              "duration": 253,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createRequest('POST', endpoints.url.baseUrl + endpoints.read.vehiclesOrDrivers, payloads.readDrivers).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.be.an('array').that.is.not.empty;\n});",
              "err": {},
              "uuid": "2599910c-550b-4b18-82f1-8937e36e3307",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Read active equipments",
              "fullTitle": "GoAwake API Read active equipments",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createRequest('GET', endpoints.url.baseUrl + endpoints.read.activeEquipments).then(response => {\n  expect(response.status).to.eq(200);\n  expect(JSON.parse(response.body)).to.be.an('array').that.is.not.empty;\n});",
              "err": {},
              "uuid": "3b3a555e-2440-4a2c-809c-cb8a1c5a2b0b",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Read last alarm",
              "fullTitle": "GoAwake API Read last alarm",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createRequest('POST', endpoints.url.baseUrl + endpoints.read.lastAlarm, payloads.readLastAlarm).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body[0]).to.have.property('inserted_on');\n});",
              "err": {},
              "uuid": "0ef6d470-ee16-4deb-a1b5-effb0e389ac2",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Read last heartbeat by customer",
              "fullTitle": "GoAwake API Read last heartbeat by customer",
              "timedOut": null,
              "duration": 224,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createRequest('POST', endpoints.url.baseUrl + endpoints.read.lastHeartbeatByCustomer, payloads.readLastHeartbeatByCustomer).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body[0]).to.have.property('vehicle_id');\n});",
              "err": {},
              "uuid": "92f5865b-c9df-493f-b0a6-3a35c54845cf",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Read risk rating",
              "fullTitle": "GoAwake API Read risk rating",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createRequest('GET', endpoints.url.baseUrl + endpoints.read.readRiskRating).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.be.an('array').that.is.not.empty;\n});",
              "err": {},
              "uuid": "f764b310-181d-4388-a682-1811e3f151f1",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sync vehicles",
              "fullTitle": "GoAwake API Sync vehicles",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createRequest('GET', endpoints.url.baseUrl + endpoints.read.syncVehicles).then(response => {\n  expect(response.status).to.eq(200);\n  expect(JSON.parse(response.body)).to.be.an('array');\n});",
              "err": {},
              "uuid": "c4f48d19-3a39-4476-be42-be375985c0bb",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sync drivers",
              "fullTitle": "GoAwake API Sync drivers",
              "timedOut": null,
              "duration": 316,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createRequest('GET', endpoints.url.baseUrl + endpoints.read.syncDrivers).then(response => {\n  expect(response.status).to.eq(200);\n  expect(JSON.parse(response.body)).to.be.an('array');\n});",
              "err": {},
              "uuid": "7a54010e-30a9-4fbd-909a-46d4aff99b5c",
              "parentUUID": "7aa8ed65-2e57-4c41-ad5a-4c754757b572",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "60b52baa-f411-472a-ba5a-5eb0cc71b6fc",
            "26a510d7-a4bb-465e-92c3-501a5b036fbc",
            "1da55a04-0db7-46b9-971b-4b2577729cc6",
            "fff72976-838a-4439-bcfa-5c10278c2e5e",
            "dab62648-b225-41d3-b9a4-cc31d0c4228b",
            "7301dd01-ddc4-4b0c-94b9-7f71035c920a",
            "a7979a12-3b51-4304-a092-c1c0a7d561e7",
            "215d6c5b-ee52-4d0e-8283-5a026b097930",
            "c3e3fd6f-56d4-4c96-b9a4-8038649cc8e2",
            "2b002c72-91ab-4445-8744-2cc1d4bb2236",
            "0cdd779f-f155-4256-94bf-1cae2628ae7f",
            "cf6d0557-d2b6-4567-a9f3-68a89da71f58",
            "5524537a-79d2-4823-bdb1-9fe35dc296b5",
            "89403367-e761-4bdb-b7be-d875e0c749eb",
            "9760008b-f57b-4e5e-8332-3ac5fb25759d",
            "4e2aea08-f888-4d23-b494-a63054ce675e",
            "85ed73ad-a4ce-4292-929d-40eac52cc14d",
            "914d5395-8536-4cd7-9a34-a2834074e132",
            "9bf9f231-c9c3-488f-9f78-5caea9542e21",
            "3bce5523-48f0-4d68-ba9d-09a87600d175",
            "08571930-3e9b-43e5-92ef-ec7b96a401d6",
            "11a5aeb4-20e4-45d7-859b-620f64b374d3",
            "7d7bb9ea-af0a-4fa5-8e0a-b19f5a013ba6",
            "47cecd24-381a-450c-8d45-54c017c3be73",
            "de898126-7ea7-466e-8460-15c0ab867f7a",
            "b6e690d5-343d-436b-ac01-d1bec7b81cd7",
            "eca86c5e-b9f1-4309-829b-c5ca8bf31ff2",
            "290182d0-0838-46e3-9e20-d198f1363c8a",
            "a441e0ae-aa48-4a08-9e12-2802ddd78353",
            "2599910c-550b-4b18-82f1-8937e36e3307",
            "3b3a555e-2440-4a2c-809c-cb8a1c5a2b0b",
            "0ef6d470-ee16-4deb-a1b5-effb0e389ac2",
            "92f5865b-c9df-493f-b0a6-3a35c54845cf",
            "f764b310-181d-4388-a682-1811e3f151f1",
            "c4f48d19-3a39-4476-be42-be375985c0bb",
            "7a54010e-30a9-4fbd-909a-46d4aff99b5c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9585,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": true,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}